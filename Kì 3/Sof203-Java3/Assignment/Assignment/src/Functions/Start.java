package Functions;

import java.awt.Image;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user-ma
 */
public class Start extends javax.swing.JFrame {

    public static StudentsManager sm = new StudentsManager();
    public static StudentMarksManager smm = new StudentMarksManager();
    public static LoginForm lf = new LoginForm();

    public static boolean logged = false;
    public static boolean isGV = false;
    private Image fptIcon;

    /**
     * Creates new form Start
     */
    public Start() {
        try {
            fptIcon = ImageIO.read(new File(getClass().getResource("/Icon/fpt.jpg").getPath())).getScaledInstance(800, 350, Image.SCALE_DEFAULT);
        } catch (Exception ex) {
            Logger.getLogger(StudentsManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        setLocationRelativeTo(null);
        lf.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent we) {
            }

            @Override
            public void windowClosing(WindowEvent we) {
            }

            @Override
            public void windowClosed(WindowEvent we) {
                if (logged) {
                    mniLogin.setEnabled(false);
                    mniLogout.setEnabled(true);
                    lblStatus.setText("Logged In");
                    if (isGV) {
                        mniAddMark.setEnabled(true);
                        mniUpdateMark.setEnabled(true);
                        mniDeleteMark.setEnabled(true);
                    } else {
                        mniAddStudent.setEnabled(true);
                        mniUpdateStudent.setEnabled(true);
                        mniDeteteStudent.setEnabled(true);
                    }
                }
            }

            @Override
            public void windowIconified(WindowEvent we) {
            }

            @Override
            public void windowDeiconified(WindowEvent we) {
            }

            @Override
            public void windowDeactivated(WindowEvent we) {
            }

            @Override
            public void windowActivated(WindowEvent we) {
            }
        });
        addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent we) {
            }

            @Override
            public void windowClosing(WindowEvent we) {
                if (JOptionPane.showConfirmDialog(getContentPane(), "Are you sure? Exit?", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    System.exit(0);
                }

            }

            @Override
            public void windowClosed(WindowEvent we) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowIconified(WindowEvent we) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowDeiconified(WindowEvent we) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowActivated(WindowEvent we) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowDeactivated(WindowEvent we) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLogo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jmbMenu = new javax.swing.JMenuBar();
        mnuProgram = new javax.swing.JMenu();
        mniLogin = new javax.swing.JMenuItem();
        mniLogout = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        minExit = new javax.swing.JMenuItem();
        mnuTeacher = new javax.swing.JMenu();
        mniAddMark = new javax.swing.JMenuItem();
        mniUpdateMark = new javax.swing.JMenuItem();
        mniDeleteMark = new javax.swing.JMenuItem();
        mnuEmployee = new javax.swing.JMenu();
        mniAddStudent = new javax.swing.JMenuItem();
        mniUpdateStudent = new javax.swing.JMenuItem();
        mniDeteteStudent = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        mniHTU = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mniCFU = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mniA = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ASSIGNMENT");
        setMinimumSize(new java.awt.Dimension(800, 355));
        setResizable(false);

        pnlLogo.setBackground(new java.awt.Color(255, 255, 255));
        pnlLogo.setBorder(null);
        pnlLogo.setEnabled(false);
        pnlLogo.setFocusable(false);
        pnlLogo.setMinimumSize(new java.awt.Dimension(600, 400));
        pnlLogo.setPreferredSize(new java.awt.Dimension(600, 400));

        jLabel1.setIcon(new ImageIcon(fptIcon));

        javax.swing.GroupLayout pnlLogoLayout = new javax.swing.GroupLayout(pnlLogo);
        pnlLogo.setLayout(pnlLogoLayout);
        pnlLogoLayout.setHorizontalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlLogoLayout.setVerticalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(pnlLogo, java.awt.BorderLayout.CENTER);

        lblStatus.setText("Not Logged In");
        lblStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        getContentPane().add(lblStatus, java.awt.BorderLayout.PAGE_END);

        mnuProgram.setText("Program");

        mniLogin.setText("Log in");
        mniLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLoginActionPerformed(evt);
            }
        });
        mnuProgram.add(mniLogin);

        mniLogout.setText("Log out");
        mniLogout.setEnabled(false);
        mniLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLogoutActionPerformed(evt);
            }
        });
        mnuProgram.add(mniLogout);
        mnuProgram.add(jSeparator1);

        minExit.setText("Exit");
        minExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minExitActionPerformed(evt);
            }
        });
        mnuProgram.add(minExit);

        jmbMenu.add(mnuProgram);

        mnuTeacher.setText("Teacher");

        mniAddMark.setText("Add New Student Mark");
        mniAddMark.setEnabled(false);
        mniAddMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAddMarkActionPerformed(evt);
            }
        });
        mnuTeacher.add(mniAddMark);

        mniUpdateMark.setText("Update Student Mark");
        mniUpdateMark.setEnabled(false);
        mniUpdateMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUpdateMarkActionPerformed(evt);
            }
        });
        mnuTeacher.add(mniUpdateMark);

        mniDeleteMark.setText("Delete Student Mark");
        mniDeleteMark.setEnabled(false);
        mniDeleteMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDeleteMarkActionPerformed(evt);
            }
        });
        mnuTeacher.add(mniDeleteMark);

        jmbMenu.add(mnuTeacher);

        mnuEmployee.setText("Employee");

        mniAddStudent.setText("Add New Student");
        mniAddStudent.setEnabled(false);
        mniAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAddStudentActionPerformed(evt);
            }
        });
        mnuEmployee.add(mniAddStudent);

        mniUpdateStudent.setText("Update Student Info");
        mniUpdateStudent.setEnabled(false);
        mniUpdateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUpdateStudentActionPerformed(evt);
            }
        });
        mnuEmployee.add(mniUpdateStudent);

        mniDeteteStudent.setText("Delete Student");
        mniDeteteStudent.setEnabled(false);
        mniDeteteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDeteteStudentActionPerformed(evt);
            }
        });
        mnuEmployee.add(mniDeteteStudent);

        jmbMenu.add(mnuEmployee);

        jMenu1.setText("Help");

        mniHTU.setText("How To Use?");
        mniHTU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHTUActionPerformed(evt);
            }
        });
        jMenu1.add(mniHTU);
        jMenu1.add(jSeparator2);

        mniCFU.setText("Check For Update");
        mniCFU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniCFUActionPerformed(evt);
            }
        });
        jMenu1.add(mniCFU);
        jMenu1.add(jSeparator3);

        mniA.setText("About");
        mniA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAActionPerformed(evt);
            }
        });
        jMenu1.add(mniA);

        jmbMenu.add(jMenu1);

        setJMenuBar(jmbMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniAddMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAddMarkActionPerformed
        // TODO add your handling code here:
        if (!smm.isVisible()) {
            smm.setVisible(true);
        }

    }//GEN-LAST:event_mniAddMarkActionPerformed

    private void mniLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLoginActionPerformed
        // TODO add your handling code here:
        if (!lf.isVisible()) {
            lf.setVisible(true);
        }
    }//GEN-LAST:event_mniLoginActionPerformed

    private void mniLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLogoutActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Are you sure? Log out?", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            logged = false;
            lblStatus.setText("Not Logged In");
            mniLogin.setEnabled(true);
            mniLogout.setEnabled(false);
            mniAddMark.setEnabled(false);
            mniUpdateMark.setEnabled(false);
            mniDeleteMark.setEnabled(false);
            mniAddStudent.setEnabled(false);
            mniUpdateStudent.setEnabled(false);
            mniDeteteStudent.setEnabled(false);
        }
    }//GEN-LAST:event_mniLogoutActionPerformed

    private void minExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minExitActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Are you sure? Exit?", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_minExitActionPerformed

    private void mniUpdateMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUpdateMarkActionPerformed
        // TODO add your handling code here:
        if (!smm.isVisible()) {
            smm.setVisible(true);
        }
    }//GEN-LAST:event_mniUpdateMarkActionPerformed

    private void mniDeleteMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDeleteMarkActionPerformed
        // TODO add your handling code here:
        if (!smm.isVisible()) {
            smm.setVisible(true);
        }
    }//GEN-LAST:event_mniDeleteMarkActionPerformed

    private void mniAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAddStudentActionPerformed
        // TODO add your handling code here:
        if (!sm.isVisible()) {
            sm.setVisible(true);
        }
    }//GEN-LAST:event_mniAddStudentActionPerformed

    private void mniUpdateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUpdateStudentActionPerformed
        // TODO add your handling code here:
        if (!sm.isVisible()) {
            sm.setVisible(true);
        }
    }//GEN-LAST:event_mniUpdateStudentActionPerformed

    private void mniDeteteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDeteteStudentActionPerformed
        // TODO add your handling code here:
        if (!sm.isVisible()) {
            sm.setVisible(true);
        }
    }//GEN-LAST:event_mniDeteteStudentActionPerformed

    private void mniHTUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHTUActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Still developing");
    }//GEN-LAST:event_mniHTUActionPerformed

    private void mniCFUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniCFUActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Still developing");
    }//GEN-LAST:event_mniCFUActionPerformed

    private void mniAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Still developing");
    }//GEN-LAST:event_mniAActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Start st = new Start();
                st.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenuBar jmbMenu;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JMenuItem minExit;
    private javax.swing.JMenuItem mniA;
    private javax.swing.JMenuItem mniAddMark;
    private javax.swing.JMenuItem mniAddStudent;
    private javax.swing.JMenuItem mniCFU;
    private javax.swing.JMenuItem mniDeleteMark;
    private javax.swing.JMenuItem mniDeteteStudent;
    private javax.swing.JMenuItem mniHTU;
    private javax.swing.JMenuItem mniLogin;
    private javax.swing.JMenuItem mniLogout;
    private javax.swing.JMenuItem mniUpdateMark;
    private javax.swing.JMenuItem mniUpdateStudent;
    private javax.swing.JMenu mnuEmployee;
    private javax.swing.JMenu mnuProgram;
    private javax.swing.JMenu mnuTeacher;
    private javax.swing.JPanel pnlLogo;
    // End of variables declaration//GEN-END:variables

    public JLabel getLblStatus() {
        return lblStatus;
    }

    public void setLblStatus(JLabel lblStatus) {
        this.lblStatus = lblStatus;
    }

    public JMenuItem getMniAddMark() {
        return mniAddMark;
    }

    public void setMniAddMark(JMenuItem mniAddMark) {
        this.mniAddMark = mniAddMark;
    }

    public JMenuItem getMniAddStudent() {
        return mniAddStudent;
    }

    public void setMniAddStudent(JMenuItem mniAddStudent) {
        this.mniAddStudent = mniAddStudent;
    }

    public JMenuItem getMniDeleteMark() {
        return mniDeleteMark;
    }

    public void setMniDeleteMark(JMenuItem mniDeleteMark) {
        this.mniDeleteMark = mniDeleteMark;
    }

    public JMenuItem getMniDeteteStudent() {
        return mniDeteteStudent;
    }

    public void setMniDeteteStudent(JMenuItem mniDeteteStudent) {
        this.mniDeteteStudent = mniDeteteStudent;
    }

    public JMenuItem getMniLogin() {
        return mniLogin;
    }

    public void setMniLogin(JMenuItem mniLogin) {
        this.mniLogin = mniLogin;
    }

    public JMenuItem getMniLogout() {
        return mniLogout;
    }

    public void setMniLogout(JMenuItem mniLogout) {
        this.mniLogout = mniLogout;
    }

    public JMenuItem getMniUpdateMark() {
        return mniUpdateMark;
    }

    public void setMniUpdateMark(JMenuItem mniUpdateMark) {
        this.mniUpdateMark = mniUpdateMark;
    }

    public JMenuItem getMniUpdateStudent() {
        return mniUpdateStudent;
    }

    public void setMniUpdateStudent(JMenuItem mniUpdateStudent) {
        this.mniUpdateStudent = mniUpdateStudent;
    }

    public static boolean isLogged() {
        return logged;
    }

    public static void setLogged(boolean logged) {
        Start.logged = logged;
    }

    public static boolean isIsGV() {
        return isGV;
    }

    public static void setIsGV(boolean isGV) {
        Start.isGV = isGV;
    }

}
