/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.ColourDAO;
import DAO.MemoryDAO;
import DAO.PhoneNameDAO;
import DAO.ProducerDAO;
import DAO.ProductDAO;
import DAO.TypeDAO;
import Model.Colour;
import Model.Memory;
import Model.PhoneName;
import Model.Producer;
import Model.Type;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author ma-user
 */
public class MSP extends javax.swing.JPanel {

    private ArrayList<Producer> prd;
    private ArrayList<PhoneName> pn;
    private ArrayList<Memory> mmr;
    private ArrayList<Colour> cl;
    private ArrayList<Type> lst;
    private DefaultComboBoxModel thModel, pnModel, mModel, bntModel, bnrModel, romtModel, ramtModel;
    private DefaultTableModel model;
    private int page, curPage, itemPerPage, row, show;
    private TypeDAO typeDAO;
    private ProductDAO productDAO;
    private boolean loadOk;

    /**
     * Creates new form M
     */
    public MSP() {
        initComponents();
        loadPanelData();
        model = (DefaultTableModel) tblData.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtSTK = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        cboTH = new javax.swing.JComboBox<>();
        btnTTH = new javax.swing.JButton();
        cboTM = new javax.swing.JComboBox<>();
        btnTTM = new javax.swing.JButton();
        cboRom = new javax.swing.JComboBox<>();
        btnTBN = new javax.swing.JButton();
        btnTBN1 = new javax.swing.JButton();
        btnTM = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        cboRam = new javax.swing.JComboBox<>();
        cboMau = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        lblPos = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnEnd = new javax.swing.JButton();
        txtPos = new javax.swing.JTextField();
        btnGo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTimT = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        rdoHD = new javax.swing.JRadioButton();
        rdoTC = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        cboRomT = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cboRamT = new javax.swing.JComboBox<>();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin máy"));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Thương hiệu");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Tên máy");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Rom");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Ram");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Màu");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Mã sản phẩm");

        txtSTK.setEditable(false);
        txtSTK.setBackground(new java.awt.Color(204, 204, 204));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        cboTH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        cboTH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTHItemStateChanged(evt);
            }
        });

        btnTTH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Add.png"))); // NOI18N
        btnTTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTTHActionPerformed(evt);
            }
        });

        cboTM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        cboTM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTMItemStateChanged(evt);
            }
        });

        btnTTM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Add.png"))); // NOI18N
        btnTTM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTTMActionPerformed(evt);
            }
        });

        cboRom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        cboRom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboRomItemStateChanged(evt);
            }
        });

        btnTBN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Add.png"))); // NOI18N
        btnTBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTBNActionPerformed(evt);
            }
        });

        btnTBN1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Add.png"))); // NOI18N
        btnTBN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTBN1ActionPerformed(evt);
            }
        });

        btnTM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Add.png"))); // NOI18N
        btnTM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTMActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        cboRam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        cboRam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboRamItemStateChanged(evt);
            }
        });

        cboMau.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        cboMau.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMauItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                                .addComponent(cboRom, 0, 326, Short.MAX_VALUE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(btnTBN))
                                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(cboTM, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(cboTH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(btnTTH, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(btnTTM, javax.swing.GroupLayout.Alignment.TRAILING))))
                                                .addGap(43, 43, 43)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtSTK, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(cboRam, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(cboMau, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(btnTBN1, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(btnTM, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addGap(34, 34, 34))))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(btnTTH)
                                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jLabel3)
                                                                .addComponent(jLabel4)
                                                                .addComponent(cboTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(cboRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(btnTBN1))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jLabel6)
                                                                .addComponent(jLabel9)
                                                                .addComponent(cboTM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(cboMau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(btnTTM)))
                                        .addComponent(btnTM))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel10)
                                                .addComponent(txtSTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel7)
                                                .addComponent(cboRom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(btnTBN))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnThem)
                                        .addComponent(btnXoa))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách máy"));

        tblData.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null}
                },
                new String[]{
                        "Mã máy", "Tên máy", "Số lượng"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblData);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Trang:");

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/home.png"))); // NOI18N
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        lblPos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPos.setForeground(new java.awt.Color(255, 0, 51));
        lblPos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPos.setText("1/1");

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnEnd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/end.png"))); // NOI18N
        btnEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndActionPerformed(evt);
            }
        });

        txtPos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPos.setText("1");

        btnGo.setText("Đi đến");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Tên máy");

        txtTimT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimTKeyReleased(evt);
            }
        });

        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LIB/ICON/Search.png"))); // NOI18N
        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoHD);
        rdoHD.setSelected(true);
        rdoHD.setText("Chỉ hiện loại máy còn kinh doanh");
        rdoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHDActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoTC);
        rdoTC.setText("Hiện tất cả");

        jLabel2.setText("Bộ nhớ trong");

        cboRomT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        jLabel5.setText("Ram");

        cboRamT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                                .addComponent(rdoHD)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(rdoTC))
                                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                                .addComponent(txtTimT, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(38, 38, 38)
                                                                                .addComponent(jLabel2)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(cboRomT, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(24, 24, 24)
                                                                                .addComponent(jLabel5)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(cboRamT, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(lblPos, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(btnEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(txtPos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(btnGo)))
                                                .addGap(0, 21, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(txtTimT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnTim)
                                        .addComponent(jLabel2)
                                        .addComponent(cboRomT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5)
                                        .addComponent(cboRamT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(rdoHD)
                                        .addComponent(rdoTC))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnGo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtPos, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblPos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnNext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnEnd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rdoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoHDActionPerformed

    private void cboTHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTHItemStateChanged
        // TODO add your handling code here:
        if (cboTH.getSelectedIndex() >= 0) {
            showPhoneName();
            autoSTK();
        }
    }//GEN-LAST:event_cboTHItemStateChanged

    private void btnTTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTTHActionPerformed
        // TODO add your handling code here:
        addCT(0);
    }//GEN-LAST:event_btnTTHActionPerformed

    private void btnTTMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTTMActionPerformed
        // TODO add your handling code here:
        addCT(1);
    }//GEN-LAST:event_btnTTMActionPerformed

    private void btnTBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTBNActionPerformed
        // TODO add your handling code here:
        addCT(2);
    }//GEN-LAST:event_btnTBNActionPerformed

    private void btnTBN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTBN1ActionPerformed
        // TODO add your handling code here:
        addCT(2);
    }//GEN-LAST:event_btnTBN1ActionPerformed

    private void btnTMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTMActionPerformed
        // TODO add your handling code here:
        addCT(3);
    }//GEN-LAST:event_btnTMActionPerformed

    private void cboTMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTMItemStateChanged
        // TODO add your handling code here:
        if (cboTM.getSelectedIndex() >= 0) {
            autoSTK();
        }
    }//GEN-LAST:event_cboTMItemStateChanged

    private void cboRomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboRomItemStateChanged
        // TODO add your handling code here:
        if (cboRom.getSelectedIndex() >= 0) {
            autoSTK();
        }
    }//GEN-LAST:event_cboRomItemStateChanged

    private void cboRamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboRamItemStateChanged
        // TODO add your handling code here:
        if (cboRam.getSelectedIndex() >= 0) {
            autoSTK();
        }
    }//GEN-LAST:event_cboRamItemStateChanged

    private void cboMauItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMauItemStateChanged
        // TODO add your handling code here:
        if (cboMau.getSelectedIndex() >= 0) {
            autoSTK();
        }
    }//GEN-LAST:event_cboMauItemStateChanged

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        curPage = 1;
        fillTable(rdoTC.isSelected());
    }//GEN-LAST:event_btnTimActionPerformed

    private void txtTimTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimTKeyReleased
        // TODO add your handling code here:
        curPage = 1;
        fillTable(rdoTC.isSelected());
    }//GEN-LAST:event_txtTimTKeyReleased

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        curPage = 1;
        fillTable(rdoTC.isSelected());
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        curPage = curPage > 1 ? curPage - 1 : 1;
        fillTable(rdoTC.isSelected());
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        curPage = curPage < page ? curPage + 1 : page;
        fillTable(rdoTC.isSelected());
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndActionPerformed
        // TODO add your handling code here:
        curPage = page;
        fillTable(rdoTC.isSelected());
    }//GEN-LAST:event_btnEndActionPerformed

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        // TODO add your handling code here:
        row = tblData.getSelectedRow();
        if (row >= 0) {
            showDetail();
        }
    }//GEN-LAST:event_tblDataMouseClicked

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        // TODO add your handling code here:
        try {
            if (Integer.parseInt(txtPos.getText()) != curPage
                    && Integer.parseInt(txtPos.getText()) > 0
                    && Integer.parseInt(txtPos.getText()) <= page) {
                curPage = Integer.parseInt(txtPos.getText());
                fillTable(rdoTC.isSelected());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "số trang phải là số nguyên lớn hơn 0 và nhỏ hơn tổng tất cả các trang");
        }
    }//GEN-LAST:event_btnGoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEnd;
    private javax.swing.JButton btnGo;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnTBN;
    private javax.swing.JButton btnTBN1;
    private javax.swing.JButton btnTM;
    private javax.swing.JButton btnTTH;
    private javax.swing.JButton btnTTM;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboMau;
    private javax.swing.JComboBox<String> cboRam;
    private javax.swing.JComboBox<String> cboRamT;
    private javax.swing.JComboBox<String> cboRom;
    private javax.swing.JComboBox<String> cboRomT;
    private javax.swing.JComboBox<String> cboTH;
    private javax.swing.JComboBox<String> cboTM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblPos;
    private javax.swing.JRadioButton rdoHD;
    private javax.swing.JRadioButton rdoTC;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtPos;
    private javax.swing.JTextField txtSTK;
    private javax.swing.JTextField txtTimT;
    // End of variables declaration//GEN-END:variables

    private void autoSTK() {
        if (!loadOk) {
            return;
        }
        if (checkCbo()) {
            txtSTK.setText(prd.get(cboTH.getSelectedIndex()).getId()
                    + String.format("%03d", pn.get(cboTM.getSelectedIndex()).getNum_order()) + "-"
                    + String.format("%05d", mmr.get(cboRom.getSelectedIndex()).getAmount()) + "-"
                    + String.format("%02d", mmr.get(cboRam.getSelectedIndex()).getAmount()) + "-"
                    + String.format("%03d", cl.get(cboMau.getSelectedIndex()).getId())
            );
        }
    }

    private boolean checkCbo() {
        return cboTH.getSelectedIndex() >= 0
                && cboTM.getSelectedIndex() >= 0
                && cboRam.getSelectedIndex() >= 0
                && cboRom.getSelectedIndex() >= 0
                && cboMau.getSelectedIndex() >= 0;
    }

    private void showTH() {
        thModel = new DefaultComboBoxModel();
        cboTH.setModel(thModel);
        thModel.removeAllElements();
        prd = new ProducerDAO().selectAll();
        for (Producer t : prd) {
            thModel.addElement(t);
        }
    }

    private void showPhoneName() {
        pnModel = new DefaultComboBoxModel();
        cboTM.setModel(pnModel);
        pnModel.removeAllElements();
        pn = new PhoneNameDAO().selectAllByColumn(((Producer) thModel.getElementAt(cboTH.getSelectedIndex())).getId());
        if (pn == null || pn.size() <= 0) {
            cboTM.setEnabled(false);
        } else {
            cboTM.setEnabled(true);
            for (PhoneName t : pn) {
                pnModel.addElement(t);
            }
        }
    }

    private void showColour() {
        mModel = new DefaultComboBoxModel();
        cboMau.setModel(mModel);
        mModel.removeAllElements();
        cl = new ColourDAO().selectAll();
        for (Colour t : cl) {
            mModel.addElement(t);
        }
    }

    private void showMemory() {
        bntModel = new DefaultComboBoxModel();
        bnrModel = new DefaultComboBoxModel();
        romtModel = new DefaultComboBoxModel();
        ramtModel = new DefaultComboBoxModel();
        cboRom.setModel(bntModel);
        cboRam.setModel(bnrModel);
        cboRomT.setModel(romtModel);
        cboRamT.setModel(ramtModel);
        bntModel.removeAllElements();
        bnrModel.removeAllElements();
        romtModel.removeAllElements();
        ramtModel.removeAllElements();
        mmr = new MemoryDAO().selectAll();
        romtModel.addElement(null);
        ramtModel.addElement(null);
        for (Memory t : mmr) {
            bntModel.addElement(t);
            bnrModel.addElement(t);
            romtModel.addElement(t);
            ramtModel.addElement(t);
        }
    }

    private void fillTable() {
        fillTable(null, false, null, null);
    }

    private void fillTable(boolean findAll) {
        row = 0;
        int x = cboRamT.getSelectedIndex();
        int y = cboRomT.getSelectedIndex();
        Integer ram = (x > 0 ? (Integer) ((Memory) ramtModel.getElementAt(cboRamT.getSelectedIndex())).getAmount() : null);
        Integer rom = (y > 0 ? (Integer) ((Memory) romtModel.getElementAt(cboRomT.getSelectedIndex())).getAmount() : null);
        fillTable(txtTimT.getText().trim().equalsIgnoreCase("") ? null : txtTimT.getText().trim(), findAll, ram, rom);
    }

    private void fillTable(String find, boolean findAll, Integer ram, Integer rom) {
        int start = curPage * itemPerPage - itemPerPage, end = itemPerPage * curPage - 1;
        lst = typeDAO.selectAll();
        if (lst == null) {
            model.setRowCount(0);
            model.fireTableDataChanged();
            return;
        }
        if (find != null) {
            for (int i = lst.size() - 1; i >= 0; i--) {
                if (!Helper.Helper.removeAccent(lst.get(i).getType_name()).toLowerCase().contains(Helper.Helper.removeAccent(find).toLowerCase())) {
                    lst.remove(i);
                }
            }
        }
        if (!findAll) {
            for (int i = lst.size() - 1; i >= 0; i--) {
                if (!lst.get(i).getType_stat().equals("KD")) {
                    lst.remove(i);
                }
            }
        }
        if (ram != null || rom != null) {
            for (int i = lst.size() - 1; i >= 0; i--) {
                if ((ram != null ? Integer.parseInt(lst.get(i).getType_id().substring(12, 14)) != ram : true)
                        && (rom != null ? Integer.parseInt(lst.get(i).getType_id().substring(6, 11)) != rom : true)) {
                    lst.remove(i);
                }
            }
        }
        if (end > lst.size() - 1) {
            end = lst.size() - 1;
        }

        if (lst.size() > 0) {
            page = (int) Math.ceil(lst.size() / (double) itemPerPage);
            model.setRowCount(0);
            for (int i = start; i <= end; i++) {
                int x = productDAO.getNumOfPhoneInStorage(lst.get(i).getType_id());
                model.addRow(new Object[]{lst.get(i).getType_id(), lst.get(i).getType_name(), x});
            }
            model.fireTableDataChanged();
            txtPos.setText(String.valueOf(curPage));
            lblPos.setText(String.valueOf(curPage) + "/" + String.valueOf(page));
            showDetail();
        }
    }

    private void showDetail() {
        show = (curPage - 1) * itemPerPage + row;
        String id = (String) model.getValueAt(row, 0);
        for (int i = 0; i < prd.size(); i++) {
            if (id.substring(0, 2).equals(prd.get(i).getId())) {
                cboTH.setSelectedIndex(i);
                break;
            }
        }
        for (int i = 0; i < pn.size(); i++) {
            if (Integer.parseInt(id.substring(2, 5)) == pn.get(i).getNum_order()) {
                cboTM.setSelectedIndex(i);
                break;
            }
        }
        for (int i = 0; i < mmr.size(); i++) {
            if (Integer.parseInt(id.substring(12, 14)) == mmr.get(i).getAmount()) {
                cboRam.setSelectedIndex(i);
                break;
            }
        }
        for (int i = 0; i < pn.size(); i++) {
            if (Integer.parseInt(id.substring(6, 11)) == mmr.get(i).getAmount()) {
                cboRom.setSelectedIndex(i);
                break;
            }
        }
        for (int i = 0; i < pn.size(); i++) {
            if (Integer.parseInt(id.substring(15, 18)) == cl.get(i).getId()) {
                cboMau.setSelectedIndex(i);
                break;
            }
        }
        tblData.setRowSelectionInterval(row, row);
//        lblPos.setText(String.valueOf(curPage));
//        txtPos.setText();
    }

    private void loadPanelData() {
        loadOk = false;
        typeDAO = new TypeDAO();
        productDAO = new ProductDAO();
        showTH();
        showMemory();
        showColour();
        cboTH.setSelectedIndex(0);
        row = 0;
        curPage = 1;
        itemPerPage = 3;
        model = (DefaultTableModel) tblData.getModel();
        model.setRowCount(0);
        model.fireTableDataChanged();
        fillTable();
        loadOk = true;
        autoSTK();
    }

    private void addCT(int openTab) {
        TCT tct = new TCT((javax.swing.JFrame) this.getTopLevelAncestor(), true, openTab);
        tct.setVisible(true);
        tct.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent we) {
                loadPanelData();
            }

        });
    }

    private void insert() {
        String name = ((Producer) thModel.getElementAt(cboTH.getSelectedIndex())).getName() + " - "
                + ((PhoneName) pnModel.getElementAt(cboTM.getSelectedIndex())).getName() + " - "
                + ((Memory) bntModel.getElementAt(cboRom.getSelectedIndex())).toString() + " - Ram "
                + ((Memory) bnrModel.getElementAt(cboRam.getSelectedIndex())).toString() + " - Màu "
                + ((Colour) mModel.getElementAt(cboMau.getSelectedIndex())).getName();
        Type type = typeDAO.select(new Type(txtSTK.getText(), name, "KD"));
        if (type != null) {
            if (type.getType_stat().equals("KD")) {
                JOptionPane.showMessageDialog(this, "Đã tồn tại");
            } else {
                if (!typeDAO.update(new Type(txtSTK.getText(), name, "KD"))) {
                    JOptionPane.showMessageDialog(this, "có lỗi xảy ra. chạy lại chương trình");
                } else {
                    fillTable();
                }
            }
        } else {
            if (!typeDAO.insert(new Type(txtSTK.getText(), name, "KD"))) {
                JOptionPane.showMessageDialog(this, "có lỗi xảy ra. chạy lại chương trình");
            } else {
                fillTable();
            }
        }
    }

    private void delete() {
        if (JOptionPane.showConfirmDialog(this, "Xác nhận xóa? không thể hoàn tác.", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (!typeDAO.delete(new Type(lst.get(show).getType_id(), "", "NB"))) {
                JOptionPane.showMessageDialog(this, "có lỗi xảy ra. chạy lại chương trình");
            } else {
                curPage = 1;
                row = 0;
                fillTable();
            }
        }
    }
}
