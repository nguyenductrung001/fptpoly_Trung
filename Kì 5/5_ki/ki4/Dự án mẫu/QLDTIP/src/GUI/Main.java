/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.QLDT.*;
import GUI.QLHD.*;
import GUI.QLNV.*;
import GUI.TKBC.*;
import Helper.Helper;
import Model.Employee;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JInternalFrame;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;

/**
 *
 * @author ma-user
 */
public class Main extends javax.swing.JFrame {

    public static DN dn;
    public static HD mdi;
    public static DMK dmk;
    public static QMK qmk;
    public static NhapKho nhapkho;
    public static ThemDT themdt;
    public static XemDT xemdt;
    public static TimHD timhd;
    public static XemHD xemhd;
    public static SuaNV suanv;
    public static ThemNV themnv;
    public static TimNV timnv;
    public static Xem xem;
    public static DSKH dskh;
    public static XemBCDT xembcdt;
    public static XemDS xemds;

    public static Employee user = new Employee();
    public static boolean logged = false;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        try {
            File f = new File(System.getProperty("user.home") + "/Documents/QLDTIP/Images");
            if (f.exists() == false) {
                Path path = Paths.get(System.getProperty("user.home") + "/Documents/QLDTIP/Images/");
                Files.createDirectories(path);
            }
        } catch (IOException e) {
            System.err.println("Lỗi");
        }
        setExtendedState(MAXIMIZED_BOTH);
        if (Helper.openConnection() == false) {
            System.exit(0);
        }
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                Helper.closeConnection();
            }
        });
        showDN();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPanel = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mniDMK = new javax.swing.JMenuItem();
        mniDX = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mniThemNV = new javax.swing.JMenuItem();
        mniXemNV = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mniThemDT = new javax.swing.JMenuItem();
        mniNhapKho = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mniTimHD = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        mniXemDT = new javax.swing.JMenuItem();
        mniXemDS = new javax.swing.JMenuItem();
        mniDSKH = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        mniAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1360, Short.MAX_VALUE)
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 809, Short.MAX_VALUE)
        );

        jMenu1.setText("Nhân viên");
        jMenu1.setMargin(new java.awt.Insets(0, 5, 0, 30));

        mniDMK.setText("Đổi mật khẩu");
        mniDMK.setEnabled(false);
        mniDMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDMKActionPerformed(evt);
            }
        });
        jMenu1.add(mniDMK);

        mniDX.setText("Đăng xuất");
        mniDX.setEnabled(false);
        mniDX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDXActionPerformed(evt);
            }
        });
        jMenu1.add(mniDX);
        jMenu1.add(jSeparator2);

        mniThemNV.setText("Thêm nhân viên");
        mniThemNV.setEnabled(false);
        mniThemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThemNVActionPerformed(evt);
            }
        });
        jMenu1.add(mniThemNV);

        mniXemNV.setText("Xem chi tiết");
        mniXemNV.setEnabled(false);
        mniXemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniXemNVActionPerformed(evt);
            }
        });
        jMenu1.add(mniXemNV);
        jMenu1.add(jSeparator1);

        mniExit.setText("Exit");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        jMenu1.add(mniExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Điện thoại");
        jMenu2.setMargin(new java.awt.Insets(0, 5, 0, 30));

        mniThemDT.setText("Thêm mới ");
        mniThemDT.setEnabled(false);
        mniThemDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThemDTActionPerformed(evt);
            }
        });
        jMenu2.add(mniThemDT);

        mniNhapKho.setText("Nhập kho");
        mniNhapKho.setEnabled(false);
        mniNhapKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNhapKhoActionPerformed(evt);
            }
        });
        jMenu2.add(mniNhapKho);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Hóa đơn");
        jMenu3.setMargin(new java.awt.Insets(0, 5, 0, 30));

        mniTimHD.setText("Tìm hóa đơn");
        mniTimHD.setEnabled(false);
        mniTimHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniTimHDActionPerformed(evt);
            }
        });
        jMenu3.add(mniTimHD);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Thống kê");
        jMenu4.setMargin(new java.awt.Insets(0, 5, 0, 30));

        mniXemDT.setText("Xem doanh thu");
        mniXemDT.setEnabled(false);
        mniXemDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniXemDTActionPerformed(evt);
            }
        });
        jMenu4.add(mniXemDT);

        mniXemDS.setText("Xem doanh số");
        mniXemDS.setEnabled(false);
        mniXemDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniXemDSActionPerformed(evt);
            }
        });
        jMenu4.add(mniXemDS);

        mniDSKH.setText("Danh sách khách hàng");
        mniDSKH.setEnabled(false);
        mniDSKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDSKHActionPerformed(evt);
            }
        });
        jMenu4.add(mniDSKH);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("thông tin");
        jMenu5.setMargin(new java.awt.Insets(0, 5, 0, 30));

        mniAbout.setText("About SAO");
        mniAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAboutActionPerformed(evt);
            }
        });
        jMenu5.add(mniAbout);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPanel, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniDXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDXActionPerformed
        // TODO add your handling code here:
        logged = false;
        setStateMenu(user);
        showDN();

    }//GEN-LAST:event_mniDXActionPerformed

    private void mniDMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDMKActionPerformed
        // TODO add your handling code here:
        dmk = new DMK();
        Helper.showInFrame(dmk, "Đổi Mật Khẩu");
    }//GEN-LAST:event_mniDMKActionPerformed

    private void mniThemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThemNVActionPerformed
        // TODO add your handling code here:
        themnv = new ThemNV(null, "T");
        Helper.showInFrame(themnv, "Thêm nhân viên");
    }//GEN-LAST:event_mniThemNVActionPerformed

    private void mniXemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniXemNVActionPerformed
        // TODO add your handling code here:
        if (user.getPosition().equalsIgnoreCase("AD")) {
            timnv = new TimNV();
            Helper.showInFrame(timnv, "Danh sách nhân viên");
        } else {
            themnv = new ThemNV(user, "X");
            Helper.showInFrame(themnv, "Thông tin nhân viên");
        }
    }//GEN-LAST:event_mniXemNVActionPerformed

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        // TODO add your handling code here:
        Helper.closeConnection();
        System.exit(0);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniThemDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThemDTActionPerformed
        // TODO add your handling code here:
        themdt = new ThemDT();
        Helper.showInFrame(themdt, "Thêm Điên Thoại");
    }//GEN-LAST:event_mniThemDTActionPerformed

    private void mniNhapKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNhapKhoActionPerformed
        // TODO add your handling code here:
        nhapkho = new NhapKho();
        Helper.showInFrame(nhapkho, "Nhập Kho");
    }//GEN-LAST:event_mniNhapKhoActionPerformed

    private void mniXemDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniXemDTActionPerformed
        // TODO add your handling code here:
        xemdt = new XemDT();
        Helper.showInFrame(xemdt, "Doanh thu bán hàng");
    }//GEN-LAST:event_mniXemDTActionPerformed

    private void mniXemDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniXemDSActionPerformed
        // TODO add your handling code here:
        xemds = new XemDS();
        Helper.showInFrame(xemds, "Doanh số bán hàng");
    }//GEN-LAST:event_mniXemDSActionPerformed

    private void mniAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAboutActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_mniAboutActionPerformed

    private void mniDSKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDSKHActionPerformed
        // TODO add your handling code here:
        dskh = new DSKH();
        Helper.showInFrame(dskh, "Danh sách khách hàng");
    }//GEN-LAST:event_mniDSKHActionPerformed

    private void mniTimHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniTimHDActionPerformed
        // TODO add your handling code here:
        timhd = new TimHD();
        Helper.showInFrame(timhd, "TÌm hóa đơn");
    }//GEN-LAST:event_mniTimHDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem mniAbout;
    private javax.swing.JMenuItem mniDMK;
    private javax.swing.JMenuItem mniDSKH;
    private javax.swing.JMenuItem mniDX;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniNhapKho;
    private javax.swing.JMenuItem mniThemDT;
    private javax.swing.JMenuItem mniThemNV;
    private javax.swing.JMenuItem mniTimHD;
    private javax.swing.JMenuItem mniXemDS;
    private javax.swing.JMenuItem mniXemDT;
    private javax.swing.JMenuItem mniXemNV;
    public static javax.swing.JDesktopPane rootPanel;
    // End of variables declaration//GEN-END:variables

    private void setStateMenu(Employee employee) {
        mniDMK.setEnabled(logged);
        mniDX.setEnabled(logged);
        mniDSKH.setEnabled(logged);
        mniNhapKho.setEnabled(logged);
        mniTimHD.setEnabled(logged);
        mniXemNV.setEnabled(logged);
        boolean isAdmin = employee.getPosition().equalsIgnoreCase("AD");
        mniXemDS.setEnabled(logged && isAdmin);
        mniThemDT.setEnabled(logged && isAdmin);
        mniThemNV.setEnabled(logged && isAdmin);
        mniXemDT.setEnabled(logged && isAdmin);
    }

    private void showDN() {
        try {
            for (JInternalFrame chiFrame : rootPanel.getAllFrames()) {
                chiFrame.dispose();
            }
            if (dn == null || dn.isClosed()) {
                dn = new DN();
                dn.setTitle("Đăng Nhập");
                rootPanel.add(dn);
                dn.setLocation(this.getWidth() / 2 - dn.getWidth() / 2, (this.getHeight() - 20) / 2 - dn.getHeight() / 2 - 20);
                dn.setVisible(true);
            } else {
                dn.setLocation(this.getWidth() / 2 - dn.getWidth() / 2, (this.getHeight() - 20) / 2 - dn.getHeight() / 2 - 20);
                dn.setVisible(true);
            }
            dn.addInternalFrameListener(new InternalFrameAdapter() {
                @Override
                public void internalFrameClosed(InternalFrameEvent e) {
                    showMDI();
                    if (logged == false) {
                        System.exit(0);
                    } else {
                        setStateMenu(user);
                    }
                }
            });
        } catch (Exception e) {
            try {
                FileWriter fw = new FileWriter(System.getProperty("user.dir") + "log/log.txt", true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter out = new PrintWriter(bw);
                e.printStackTrace(out);
            } catch (IOException ex) {
            }
        }
    }

    public static void showMDI() {

        for (JInternalFrame chiFrame : rootPanel.getAllFrames()) {
            chiFrame.dispose();
        }
        mdi = new HD();
        mdi.setTitle("Hóa đơn");
        mdi.setLocation(rootPanel.getWidth() / 2 - mdi.getWidth() / 2, (rootPanel.getHeight() - 20) / 2 - mdi.getHeight() / 2 - 20);
        rootPanel.add(mdi);
        mdi.setVisible(true);
    }

}
